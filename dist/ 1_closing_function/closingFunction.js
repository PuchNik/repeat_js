"use strict";
// Что такое замыкание?
// Замыкание — это функция, которая "помнит" своё лексическое окружение, даже когда она выполняется вне этого окружения.
// Проще говоря, замыкание позволяет функции запоминать переменные, которые были доступны в момент её создания.
// Замыкания позволяют создавать функции с приватными переменными, которые не могут быть доступны извне.
// Это полезно для инкапсуляции данных и создания модулей.
//
// Теория
// Когда вы создаёте функцию в JavaScript, она может захватывать переменные из своего внешнего окружения.
// Эти переменные остаются доступными для функции даже после того, как внешняя функция завершила выполнение.
// Это и есть замыкание.
function createCounter() {
    let count = 0; // Переменная count доступна только внутри createCounter
    return function () {
        count++; // Увеличиваем count
        return count; // Возвращаем текущее значение count
    };
}
const counter = createCounter(); // Создаём новый счётчик
console.log(counter()); // 1
console.log(counter()); // 2
console.log(counter()); // 3
